// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: notify_message.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "notify_message.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace mars {
namespace stn {
class NotifyMessageDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<NotifyMessage> {
} _NotifyMessage_default_instance_;

namespace protobuf_notify_5fmessage_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[1];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyMessage, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyMessage, head_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyMessage, target_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(NotifyMessage)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_NotifyMessage_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "notify_message.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

}  // namespace

void TableStruct::Shutdown() {
  _NotifyMessage_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _NotifyMessage_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\024notify_message.proto\022\010mars.stn\"O\n\rNoti"
      "fyMessage\022 \n\004type\030\001 \001(\0162\022.mars.stn.PullT"
      "ype\022\014\n\004head\030\002 \001(\003\022\016\n\006target\030\003 \001(\t*>\n\010Pul"
      "lType\022\017\n\013Pull_Normal\020\000\022\021\n\rPull_ChatRoom\020"
      "\001\022\016\n\nPull_Group\020\002B/\n\024win.liyufan.im.prot"
      "oB\027NotifyMessageOuterClassb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 234);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "notify_message.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_notify_5fmessage_2eproto

const ::google::protobuf::EnumDescriptor* PullType_descriptor() {
  protobuf_notify_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_notify_5fmessage_2eproto::file_level_enum_descriptors[0];
}
bool PullType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NotifyMessage::kTypeFieldNumber;
const int NotifyMessage::kHeadFieldNumber;
const int NotifyMessage::kTargetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NotifyMessage::NotifyMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_notify_5fmessage_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mars.stn.NotifyMessage)
}
NotifyMessage::NotifyMessage(const NotifyMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  target_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.target().size() > 0) {
    target_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_);
  }
  ::memcpy(&head_, &from.head_,
    reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&head_) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:mars.stn.NotifyMessage)
}

void NotifyMessage::SharedCtor() {
  target_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&head_, 0, reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&head_) + sizeof(type_));
  _cached_size_ = 0;
}

NotifyMessage::~NotifyMessage() {
  // @@protoc_insertion_point(destructor:mars.stn.NotifyMessage)
  SharedDtor();
}

void NotifyMessage::SharedDtor() {
  target_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void NotifyMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NotifyMessage::descriptor() {
  protobuf_notify_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_notify_5fmessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NotifyMessage& NotifyMessage::default_instance() {
  protobuf_notify_5fmessage_2eproto::InitDefaults();
  return *internal_default_instance();
}

NotifyMessage* NotifyMessage::New(::google::protobuf::Arena* arena) const {
  NotifyMessage* n = new NotifyMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NotifyMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:mars.stn.NotifyMessage)
  target_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&head_, 0, reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&head_) + sizeof(type_));
}

bool NotifyMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mars.stn.NotifyMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .mars.stn.PullType type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::mars::stn::PullType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 head = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &head_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string target = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_target()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->target().data(), this->target().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mars.stn.NotifyMessage.target"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mars.stn.NotifyMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mars.stn.NotifyMessage)
  return false;
#undef DO_
}

void NotifyMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mars.stn.NotifyMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mars.stn.PullType type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // int64 head = 2;
  if (this->head() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->head(), output);
  }

  // string target = 3;
  if (this->target().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->target().data(), this->target().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mars.stn.NotifyMessage.target");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->target(), output);
  }

  // @@protoc_insertion_point(serialize_end:mars.stn.NotifyMessage)
}

::google::protobuf::uint8* NotifyMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mars.stn.NotifyMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mars.stn.PullType type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // int64 head = 2;
  if (this->head() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->head(), target);
  }

  // string target = 3;
  if (this->target().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->target().data(), this->target().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mars.stn.NotifyMessage.target");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->target(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:mars.stn.NotifyMessage)
  return target;
}

size_t NotifyMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mars.stn.NotifyMessage)
  size_t total_size = 0;

  // string target = 3;
  if (this->target().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->target());
  }

  // int64 head = 2;
  if (this->head() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->head());
  }

  // .mars.stn.PullType type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NotifyMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mars.stn.NotifyMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const NotifyMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NotifyMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mars.stn.NotifyMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mars.stn.NotifyMessage)
    MergeFrom(*source);
  }
}

void NotifyMessage::MergeFrom(const NotifyMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mars.stn.NotifyMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.target().size() > 0) {

    target_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_);
  }
  if (from.head() != 0) {
    set_head(from.head());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void NotifyMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mars.stn.NotifyMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NotifyMessage::CopyFrom(const NotifyMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mars.stn.NotifyMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyMessage::IsInitialized() const {
  return true;
}

void NotifyMessage::Swap(NotifyMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NotifyMessage::InternalSwap(NotifyMessage* other) {
  target_.Swap(&other->target_);
  std::swap(head_, other->head_);
  std::swap(type_, other->type_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NotifyMessage::GetMetadata() const {
  protobuf_notify_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_notify_5fmessage_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NotifyMessage

// .mars.stn.PullType type = 1;
void NotifyMessage::clear_type() {
  type_ = 0;
}
::mars::stn::PullType NotifyMessage::type() const {
  // @@protoc_insertion_point(field_get:mars.stn.NotifyMessage.type)
  return static_cast< ::mars::stn::PullType >(type_);
}
void NotifyMessage::set_type(::mars::stn::PullType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:mars.stn.NotifyMessage.type)
}

// int64 head = 2;
void NotifyMessage::clear_head() {
  head_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 NotifyMessage::head() const {
  // @@protoc_insertion_point(field_get:mars.stn.NotifyMessage.head)
  return head_;
}
void NotifyMessage::set_head(::google::protobuf::int64 value) {
  
  head_ = value;
  // @@protoc_insertion_point(field_set:mars.stn.NotifyMessage.head)
}

// string target = 3;
void NotifyMessage::clear_target() {
  target_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& NotifyMessage::target() const {
  // @@protoc_insertion_point(field_get:mars.stn.NotifyMessage.target)
  return target_.GetNoArena();
}
void NotifyMessage::set_target(const ::std::string& value) {
  
  target_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mars.stn.NotifyMessage.target)
}
#if LANG_CXX11
void NotifyMessage::set_target(::std::string&& value) {
  
  target_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mars.stn.NotifyMessage.target)
}
#endif
void NotifyMessage::set_target(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  target_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mars.stn.NotifyMessage.target)
}
void NotifyMessage::set_target(const char* value, size_t size) {
  
  target_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mars.stn.NotifyMessage.target)
}
::std::string* NotifyMessage::mutable_target() {
  
  // @@protoc_insertion_point(field_mutable:mars.stn.NotifyMessage.target)
  return target_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* NotifyMessage::release_target() {
  // @@protoc_insertion_point(field_release:mars.stn.NotifyMessage.target)
  
  return target_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void NotifyMessage::set_allocated_target(::std::string* target) {
  if (target != NULL) {
    
  } else {
    
  }
  target_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), target);
  // @@protoc_insertion_point(field_set_allocated:mars.stn.NotifyMessage.target)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace stn
}  // namespace mars

// @@protoc_insertion_point(global_scope)
