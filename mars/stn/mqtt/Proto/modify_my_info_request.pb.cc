// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modify_my_info_request.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "modify_my_info_request.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace mars {
namespace stn {
class InfoEntryDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<InfoEntry> {
} _InfoEntry_default_instance_;
class ModifyMyInfoRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ModifyMyInfoRequest> {
} _ModifyMyInfoRequest_default_instance_;

namespace protobuf_modify_5fmy_5finfo_5frequest_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[2];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InfoEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InfoEntry, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InfoEntry, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifyMyInfoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifyMyInfoRequest, entry_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(InfoEntry)},
  { 7, -1, sizeof(ModifyMyInfoRequest)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_InfoEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ModifyMyInfoRequest_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "modify_my_info_request.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

}  // namespace

void TableStruct::Shutdown() {
  _InfoEntry_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _ModifyMyInfoRequest_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _InfoEntry_default_instance_.DefaultConstruct();
  _ModifyMyInfoRequest_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\034modify_my_info_request.proto\022\010mars.stn"
      "\"(\n\tInfoEntry\022\014\n\004type\030\001 \001(\005\022\r\n\005value\030\002 \001"
      "(\t\"9\n\023ModifyMyInfoRequest\022\"\n\005entry\030\001 \003(\013"
      "2\023.mars.stn.InfoEntryB.\n\024win.liyufan.im."
      "protoB\026ModifyMyInfoOuterClassb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 197);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "modify_my_info_request.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_modify_5fmy_5finfo_5frequest_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InfoEntry::kTypeFieldNumber;
const int InfoEntry::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InfoEntry::InfoEntry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_modify_5fmy_5finfo_5frequest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mars.stn.InfoEntry)
}
InfoEntry::InfoEntry(const InfoEntry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:mars.stn.InfoEntry)
}

void InfoEntry::SharedCtor() {
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  _cached_size_ = 0;
}

InfoEntry::~InfoEntry() {
  // @@protoc_insertion_point(destructor:mars.stn.InfoEntry)
  SharedDtor();
}

void InfoEntry::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void InfoEntry::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InfoEntry::descriptor() {
  protobuf_modify_5fmy_5finfo_5frequest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modify_5fmy_5finfo_5frequest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InfoEntry& InfoEntry::default_instance() {
  protobuf_modify_5fmy_5finfo_5frequest_2eproto::InitDefaults();
  return *internal_default_instance();
}

InfoEntry* InfoEntry::New(::google::protobuf::Arena* arena) const {
  InfoEntry* n = new InfoEntry;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InfoEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:mars.stn.InfoEntry)
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
}

bool InfoEntry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mars.stn.InfoEntry)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), this->value().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mars.stn.InfoEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mars.stn.InfoEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mars.stn.InfoEntry)
  return false;
#undef DO_
}

void InfoEntry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mars.stn.InfoEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // string value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mars.stn.InfoEntry.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  // @@protoc_insertion_point(serialize_end:mars.stn.InfoEntry)
}

::google::protobuf::uint8* InfoEntry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mars.stn.InfoEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // string value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mars.stn.InfoEntry.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:mars.stn.InfoEntry)
  return target;
}

size_t InfoEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mars.stn.InfoEntry)
  size_t total_size = 0;

  // string value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  // int32 type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InfoEntry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mars.stn.InfoEntry)
  GOOGLE_DCHECK_NE(&from, this);
  const InfoEntry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InfoEntry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mars.stn.InfoEntry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mars.stn.InfoEntry)
    MergeFrom(*source);
  }
}

void InfoEntry::MergeFrom(const InfoEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mars.stn.InfoEntry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void InfoEntry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mars.stn.InfoEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InfoEntry::CopyFrom(const InfoEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mars.stn.InfoEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InfoEntry::IsInitialized() const {
  return true;
}

void InfoEntry::Swap(InfoEntry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InfoEntry::InternalSwap(InfoEntry* other) {
  value_.Swap(&other->value_);
  std::swap(type_, other->type_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InfoEntry::GetMetadata() const {
  protobuf_modify_5fmy_5finfo_5frequest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modify_5fmy_5finfo_5frequest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// InfoEntry

// int32 type = 1;
void InfoEntry::clear_type() {
  type_ = 0;
}
::google::protobuf::int32 InfoEntry::type() const {
  // @@protoc_insertion_point(field_get:mars.stn.InfoEntry.type)
  return type_;
}
void InfoEntry::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:mars.stn.InfoEntry.type)
}

// string value = 2;
void InfoEntry::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& InfoEntry::value() const {
  // @@protoc_insertion_point(field_get:mars.stn.InfoEntry.value)
  return value_.GetNoArena();
}
void InfoEntry::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mars.stn.InfoEntry.value)
}
#if LANG_CXX11
void InfoEntry::set_value(::std::string&& value) {
  
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mars.stn.InfoEntry.value)
}
#endif
void InfoEntry::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mars.stn.InfoEntry.value)
}
void InfoEntry::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mars.stn.InfoEntry.value)
}
::std::string* InfoEntry::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:mars.stn.InfoEntry.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* InfoEntry::release_value() {
  // @@protoc_insertion_point(field_release:mars.stn.InfoEntry.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void InfoEntry::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:mars.stn.InfoEntry.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ModifyMyInfoRequest::kEntryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ModifyMyInfoRequest::ModifyMyInfoRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_modify_5fmy_5finfo_5frequest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mars.stn.ModifyMyInfoRequest)
}
ModifyMyInfoRequest::ModifyMyInfoRequest(const ModifyMyInfoRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      entry_(from.entry_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mars.stn.ModifyMyInfoRequest)
}

void ModifyMyInfoRequest::SharedCtor() {
  _cached_size_ = 0;
}

ModifyMyInfoRequest::~ModifyMyInfoRequest() {
  // @@protoc_insertion_point(destructor:mars.stn.ModifyMyInfoRequest)
  SharedDtor();
}

void ModifyMyInfoRequest::SharedDtor() {
}

void ModifyMyInfoRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ModifyMyInfoRequest::descriptor() {
  protobuf_modify_5fmy_5finfo_5frequest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modify_5fmy_5finfo_5frequest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ModifyMyInfoRequest& ModifyMyInfoRequest::default_instance() {
  protobuf_modify_5fmy_5finfo_5frequest_2eproto::InitDefaults();
  return *internal_default_instance();
}

ModifyMyInfoRequest* ModifyMyInfoRequest::New(::google::protobuf::Arena* arena) const {
  ModifyMyInfoRequest* n = new ModifyMyInfoRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ModifyMyInfoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mars.stn.ModifyMyInfoRequest)
  entry_.Clear();
}

bool ModifyMyInfoRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mars.stn.ModifyMyInfoRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .mars.stn.InfoEntry entry = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_entry()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mars.stn.ModifyMyInfoRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mars.stn.ModifyMyInfoRequest)
  return false;
#undef DO_
}

void ModifyMyInfoRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mars.stn.ModifyMyInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .mars.stn.InfoEntry entry = 1;
  for (unsigned int i = 0, n = this->entry_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->entry(i), output);
  }

  // @@protoc_insertion_point(serialize_end:mars.stn.ModifyMyInfoRequest)
}

::google::protobuf::uint8* ModifyMyInfoRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mars.stn.ModifyMyInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .mars.stn.InfoEntry entry = 1;
  for (unsigned int i = 0, n = this->entry_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->entry(i), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:mars.stn.ModifyMyInfoRequest)
  return target;
}

size_t ModifyMyInfoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mars.stn.ModifyMyInfoRequest)
  size_t total_size = 0;

  // repeated .mars.stn.InfoEntry entry = 1;
  {
    unsigned int count = this->entry_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->entry(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ModifyMyInfoRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mars.stn.ModifyMyInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ModifyMyInfoRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ModifyMyInfoRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mars.stn.ModifyMyInfoRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mars.stn.ModifyMyInfoRequest)
    MergeFrom(*source);
  }
}

void ModifyMyInfoRequest::MergeFrom(const ModifyMyInfoRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mars.stn.ModifyMyInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  entry_.MergeFrom(from.entry_);
}

void ModifyMyInfoRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mars.stn.ModifyMyInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModifyMyInfoRequest::CopyFrom(const ModifyMyInfoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mars.stn.ModifyMyInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModifyMyInfoRequest::IsInitialized() const {
  return true;
}

void ModifyMyInfoRequest::Swap(ModifyMyInfoRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ModifyMyInfoRequest::InternalSwap(ModifyMyInfoRequest* other) {
  entry_.InternalSwap(&other->entry_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ModifyMyInfoRequest::GetMetadata() const {
  protobuf_modify_5fmy_5finfo_5frequest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_modify_5fmy_5finfo_5frequest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ModifyMyInfoRequest

// repeated .mars.stn.InfoEntry entry = 1;
int ModifyMyInfoRequest::entry_size() const {
  return entry_.size();
}
void ModifyMyInfoRequest::clear_entry() {
  entry_.Clear();
}
const ::mars::stn::InfoEntry& ModifyMyInfoRequest::entry(int index) const {
  // @@protoc_insertion_point(field_get:mars.stn.ModifyMyInfoRequest.entry)
  return entry_.Get(index);
}
::mars::stn::InfoEntry* ModifyMyInfoRequest::mutable_entry(int index) {
  // @@protoc_insertion_point(field_mutable:mars.stn.ModifyMyInfoRequest.entry)
  return entry_.Mutable(index);
}
::mars::stn::InfoEntry* ModifyMyInfoRequest::add_entry() {
  // @@protoc_insertion_point(field_add:mars.stn.ModifyMyInfoRequest.entry)
  return entry_.Add();
}
::google::protobuf::RepeatedPtrField< ::mars::stn::InfoEntry >*
ModifyMyInfoRequest::mutable_entry() {
  // @@protoc_insertion_point(field_mutable_list:mars.stn.ModifyMyInfoRequest.entry)
  return &entry_;
}
const ::google::protobuf::RepeatedPtrField< ::mars::stn::InfoEntry >&
ModifyMyInfoRequest::entry() const {
  // @@protoc_insertion_point(field_list:mars.stn.ModifyMyInfoRequest.entry)
  return entry_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace stn
}  // namespace mars

// @@protoc_insertion_point(global_scope)
