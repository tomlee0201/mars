// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: group.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "group.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace mars {
namespace stn {
class GroupInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GroupInfo> {
} _GroupInfo_default_instance_;
class GroupDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Group> {
} _Group_default_instance_;

namespace protobuf_group_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[2];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroupInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroupInfo, target_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroupInfo, line_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroupInfo, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroupInfo, portrait_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroupInfo, owner_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroupInfo, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroupInfo, extra_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Group, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Group, group_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Group, members_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(GroupInfo)},
  { 12, -1, sizeof(Group)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_GroupInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Group_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "group.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

}  // namespace

void TableStruct::Shutdown() {
  _GroupInfo_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _Group_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _GroupInfo_default_instance_.DefaultConstruct();
  _Group_default_instance_.DefaultConstruct();
  _Group_default_instance_.get_mutable()->group_info_ = const_cast< ::mars::stn::GroupInfo*>(
      ::mars::stn::GroupInfo::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\013group.proto\022\010mars.stn\"\215\001\n\tGroupInfo\022\021\n"
      "\ttarget_id\030\001 \001(\t\022\014\n\004line\030\002 \001(\005\022\014\n\004name\030\003"
      " \001(\t\022\020\n\010portrait\030\004 \001(\t\022\r\n\005owner\030\005 \001(\t\022!\n"
      "\004type\030\006 \001(\0162\023.mars.stn.GroupType\022\r\n\005extr"
      "a\030\007 \001(\014\"A\n\005Group\022\'\n\ngroup_info\030\001 \001(\0132\023.m"
      "ars.stn.GroupInfo\022\017\n\007members\030\002 \003(\t*O\n\tGr"
      "oupType\022\024\n\020GroupType_Normal\020\000\022\022\n\016GroupTy"
      "pe_Free\020\001\022\030\n\024GroupType_Restricted\020\002B\'\n\024w"
      "in.liyufan.im.protoB\017GroupOuterClassb\006pr"
      "oto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 364);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "group.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_group_2eproto

const ::google::protobuf::EnumDescriptor* GroupType_descriptor() {
  protobuf_group_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_group_2eproto::file_level_enum_descriptors[0];
}
bool GroupType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GroupInfo::kTargetIdFieldNumber;
const int GroupInfo::kLineFieldNumber;
const int GroupInfo::kNameFieldNumber;
const int GroupInfo::kPortraitFieldNumber;
const int GroupInfo::kOwnerFieldNumber;
const int GroupInfo::kTypeFieldNumber;
const int GroupInfo::kExtraFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GroupInfo::GroupInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_group_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mars.stn.GroupInfo)
}
GroupInfo::GroupInfo(const GroupInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  target_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.target_id().size() > 0) {
    target_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_id_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  portrait_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.portrait().size() > 0) {
    portrait_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.portrait_);
  }
  owner_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.owner().size() > 0) {
    owner_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.owner_);
  }
  extra_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.extra().size() > 0) {
    extra_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extra_);
  }
  ::memcpy(&line_, &from.line_,
    reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&line_) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:mars.stn.GroupInfo)
}

void GroupInfo::SharedCtor() {
  target_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  portrait_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  owner_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extra_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&line_, 0, reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&line_) + sizeof(type_));
  _cached_size_ = 0;
}

GroupInfo::~GroupInfo() {
  // @@protoc_insertion_point(destructor:mars.stn.GroupInfo)
  SharedDtor();
}

void GroupInfo::SharedDtor() {
  target_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  portrait_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  owner_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extra_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GroupInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GroupInfo::descriptor() {
  protobuf_group_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_group_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GroupInfo& GroupInfo::default_instance() {
  protobuf_group_2eproto::InitDefaults();
  return *internal_default_instance();
}

GroupInfo* GroupInfo::New(::google::protobuf::Arena* arena) const {
  GroupInfo* n = new GroupInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GroupInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:mars.stn.GroupInfo)
  target_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  portrait_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  owner_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extra_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&line_, 0, reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&line_) + sizeof(type_));
}

bool GroupInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mars.stn.GroupInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string target_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_target_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->target_id().data(), this->target_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mars.stn.GroupInfo.target_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 line = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &line_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mars.stn.GroupInfo.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string portrait = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_portrait()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->portrait().data(), this->portrait().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mars.stn.GroupInfo.portrait"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string owner = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_owner()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->owner().data(), this->owner().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mars.stn.GroupInfo.owner"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .mars.stn.GroupType type = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::mars::stn::GroupType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes extra = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_extra()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mars.stn.GroupInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mars.stn.GroupInfo)
  return false;
#undef DO_
}

void GroupInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mars.stn.GroupInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string target_id = 1;
  if (this->target_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->target_id().data(), this->target_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mars.stn.GroupInfo.target_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->target_id(), output);
  }

  // int32 line = 2;
  if (this->line() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->line(), output);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mars.stn.GroupInfo.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // string portrait = 4;
  if (this->portrait().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->portrait().data(), this->portrait().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mars.stn.GroupInfo.portrait");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->portrait(), output);
  }

  // string owner = 5;
  if (this->owner().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->owner().data(), this->owner().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mars.stn.GroupInfo.owner");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->owner(), output);
  }

  // .mars.stn.GroupType type = 6;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->type(), output);
  }

  // bytes extra = 7;
  if (this->extra().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      7, this->extra(), output);
  }

  // @@protoc_insertion_point(serialize_end:mars.stn.GroupInfo)
}

::google::protobuf::uint8* GroupInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mars.stn.GroupInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string target_id = 1;
  if (this->target_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->target_id().data(), this->target_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mars.stn.GroupInfo.target_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->target_id(), target);
  }

  // int32 line = 2;
  if (this->line() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->line(), target);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mars.stn.GroupInfo.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // string portrait = 4;
  if (this->portrait().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->portrait().data(), this->portrait().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mars.stn.GroupInfo.portrait");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->portrait(), target);
  }

  // string owner = 5;
  if (this->owner().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->owner().data(), this->owner().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mars.stn.GroupInfo.owner");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->owner(), target);
  }

  // .mars.stn.GroupType type = 6;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->type(), target);
  }

  // bytes extra = 7;
  if (this->extra().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        7, this->extra(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:mars.stn.GroupInfo)
  return target;
}

size_t GroupInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mars.stn.GroupInfo)
  size_t total_size = 0;

  // string target_id = 1;
  if (this->target_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->target_id());
  }

  // string name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string portrait = 4;
  if (this->portrait().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->portrait());
  }

  // string owner = 5;
  if (this->owner().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->owner());
  }

  // bytes extra = 7;
  if (this->extra().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->extra());
  }

  // int32 line = 2;
  if (this->line() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->line());
  }

  // .mars.stn.GroupType type = 6;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GroupInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mars.stn.GroupInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const GroupInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GroupInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mars.stn.GroupInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mars.stn.GroupInfo)
    MergeFrom(*source);
  }
}

void GroupInfo::MergeFrom(const GroupInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mars.stn.GroupInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.target_id().size() > 0) {

    target_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_id_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.portrait().size() > 0) {

    portrait_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.portrait_);
  }
  if (from.owner().size() > 0) {

    owner_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.owner_);
  }
  if (from.extra().size() > 0) {

    extra_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extra_);
  }
  if (from.line() != 0) {
    set_line(from.line());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void GroupInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mars.stn.GroupInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GroupInfo::CopyFrom(const GroupInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mars.stn.GroupInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GroupInfo::IsInitialized() const {
  return true;
}

void GroupInfo::Swap(GroupInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GroupInfo::InternalSwap(GroupInfo* other) {
  target_id_.Swap(&other->target_id_);
  name_.Swap(&other->name_);
  portrait_.Swap(&other->portrait_);
  owner_.Swap(&other->owner_);
  extra_.Swap(&other->extra_);
  std::swap(line_, other->line_);
  std::swap(type_, other->type_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GroupInfo::GetMetadata() const {
  protobuf_group_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_group_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GroupInfo

// string target_id = 1;
void GroupInfo::clear_target_id() {
  target_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GroupInfo::target_id() const {
  // @@protoc_insertion_point(field_get:mars.stn.GroupInfo.target_id)
  return target_id_.GetNoArena();
}
void GroupInfo::set_target_id(const ::std::string& value) {
  
  target_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mars.stn.GroupInfo.target_id)
}
#if LANG_CXX11
void GroupInfo::set_target_id(::std::string&& value) {
  
  target_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mars.stn.GroupInfo.target_id)
}
#endif
void GroupInfo::set_target_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  target_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mars.stn.GroupInfo.target_id)
}
void GroupInfo::set_target_id(const char* value, size_t size) {
  
  target_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mars.stn.GroupInfo.target_id)
}
::std::string* GroupInfo::mutable_target_id() {
  
  // @@protoc_insertion_point(field_mutable:mars.stn.GroupInfo.target_id)
  return target_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GroupInfo::release_target_id() {
  // @@protoc_insertion_point(field_release:mars.stn.GroupInfo.target_id)
  
  return target_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GroupInfo::set_allocated_target_id(::std::string* target_id) {
  if (target_id != NULL) {
    
  } else {
    
  }
  target_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), target_id);
  // @@protoc_insertion_point(field_set_allocated:mars.stn.GroupInfo.target_id)
}

// int32 line = 2;
void GroupInfo::clear_line() {
  line_ = 0;
}
::google::protobuf::int32 GroupInfo::line() const {
  // @@protoc_insertion_point(field_get:mars.stn.GroupInfo.line)
  return line_;
}
void GroupInfo::set_line(::google::protobuf::int32 value) {
  
  line_ = value;
  // @@protoc_insertion_point(field_set:mars.stn.GroupInfo.line)
}

// string name = 3;
void GroupInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GroupInfo::name() const {
  // @@protoc_insertion_point(field_get:mars.stn.GroupInfo.name)
  return name_.GetNoArena();
}
void GroupInfo::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mars.stn.GroupInfo.name)
}
#if LANG_CXX11
void GroupInfo::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mars.stn.GroupInfo.name)
}
#endif
void GroupInfo::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mars.stn.GroupInfo.name)
}
void GroupInfo::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mars.stn.GroupInfo.name)
}
::std::string* GroupInfo::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:mars.stn.GroupInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GroupInfo::release_name() {
  // @@protoc_insertion_point(field_release:mars.stn.GroupInfo.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GroupInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:mars.stn.GroupInfo.name)
}

// string portrait = 4;
void GroupInfo::clear_portrait() {
  portrait_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GroupInfo::portrait() const {
  // @@protoc_insertion_point(field_get:mars.stn.GroupInfo.portrait)
  return portrait_.GetNoArena();
}
void GroupInfo::set_portrait(const ::std::string& value) {
  
  portrait_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mars.stn.GroupInfo.portrait)
}
#if LANG_CXX11
void GroupInfo::set_portrait(::std::string&& value) {
  
  portrait_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mars.stn.GroupInfo.portrait)
}
#endif
void GroupInfo::set_portrait(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  portrait_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mars.stn.GroupInfo.portrait)
}
void GroupInfo::set_portrait(const char* value, size_t size) {
  
  portrait_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mars.stn.GroupInfo.portrait)
}
::std::string* GroupInfo::mutable_portrait() {
  
  // @@protoc_insertion_point(field_mutable:mars.stn.GroupInfo.portrait)
  return portrait_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GroupInfo::release_portrait() {
  // @@protoc_insertion_point(field_release:mars.stn.GroupInfo.portrait)
  
  return portrait_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GroupInfo::set_allocated_portrait(::std::string* portrait) {
  if (portrait != NULL) {
    
  } else {
    
  }
  portrait_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), portrait);
  // @@protoc_insertion_point(field_set_allocated:mars.stn.GroupInfo.portrait)
}

// string owner = 5;
void GroupInfo::clear_owner() {
  owner_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GroupInfo::owner() const {
  // @@protoc_insertion_point(field_get:mars.stn.GroupInfo.owner)
  return owner_.GetNoArena();
}
void GroupInfo::set_owner(const ::std::string& value) {
  
  owner_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mars.stn.GroupInfo.owner)
}
#if LANG_CXX11
void GroupInfo::set_owner(::std::string&& value) {
  
  owner_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mars.stn.GroupInfo.owner)
}
#endif
void GroupInfo::set_owner(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  owner_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mars.stn.GroupInfo.owner)
}
void GroupInfo::set_owner(const char* value, size_t size) {
  
  owner_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mars.stn.GroupInfo.owner)
}
::std::string* GroupInfo::mutable_owner() {
  
  // @@protoc_insertion_point(field_mutable:mars.stn.GroupInfo.owner)
  return owner_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GroupInfo::release_owner() {
  // @@protoc_insertion_point(field_release:mars.stn.GroupInfo.owner)
  
  return owner_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GroupInfo::set_allocated_owner(::std::string* owner) {
  if (owner != NULL) {
    
  } else {
    
  }
  owner_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), owner);
  // @@protoc_insertion_point(field_set_allocated:mars.stn.GroupInfo.owner)
}

// .mars.stn.GroupType type = 6;
void GroupInfo::clear_type() {
  type_ = 0;
}
::mars::stn::GroupType GroupInfo::type() const {
  // @@protoc_insertion_point(field_get:mars.stn.GroupInfo.type)
  return static_cast< ::mars::stn::GroupType >(type_);
}
void GroupInfo::set_type(::mars::stn::GroupType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:mars.stn.GroupInfo.type)
}

// bytes extra = 7;
void GroupInfo::clear_extra() {
  extra_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GroupInfo::extra() const {
  // @@protoc_insertion_point(field_get:mars.stn.GroupInfo.extra)
  return extra_.GetNoArena();
}
void GroupInfo::set_extra(const ::std::string& value) {
  
  extra_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mars.stn.GroupInfo.extra)
}
#if LANG_CXX11
void GroupInfo::set_extra(::std::string&& value) {
  
  extra_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mars.stn.GroupInfo.extra)
}
#endif
void GroupInfo::set_extra(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  extra_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mars.stn.GroupInfo.extra)
}
void GroupInfo::set_extra(const void* value, size_t size) {
  
  extra_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mars.stn.GroupInfo.extra)
}
::std::string* GroupInfo::mutable_extra() {
  
  // @@protoc_insertion_point(field_mutable:mars.stn.GroupInfo.extra)
  return extra_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GroupInfo::release_extra() {
  // @@protoc_insertion_point(field_release:mars.stn.GroupInfo.extra)
  
  return extra_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GroupInfo::set_allocated_extra(::std::string* extra) {
  if (extra != NULL) {
    
  } else {
    
  }
  extra_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), extra);
  // @@protoc_insertion_point(field_set_allocated:mars.stn.GroupInfo.extra)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Group::kGroupInfoFieldNumber;
const int Group::kMembersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Group::Group()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_group_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mars.stn.Group)
}
Group::Group(const Group& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      members_(from.members_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_group_info()) {
    group_info_ = new ::mars::stn::GroupInfo(*from.group_info_);
  } else {
    group_info_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mars.stn.Group)
}

void Group::SharedCtor() {
  group_info_ = NULL;
  _cached_size_ = 0;
}

Group::~Group() {
  // @@protoc_insertion_point(destructor:mars.stn.Group)
  SharedDtor();
}

void Group::SharedDtor() {
  if (this != internal_default_instance()) {
    delete group_info_;
  }
}

void Group::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Group::descriptor() {
  protobuf_group_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_group_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Group& Group::default_instance() {
  protobuf_group_2eproto::InitDefaults();
  return *internal_default_instance();
}

Group* Group::New(::google::protobuf::Arena* arena) const {
  Group* n = new Group;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Group::Clear() {
// @@protoc_insertion_point(message_clear_start:mars.stn.Group)
  members_.Clear();
  if (GetArenaNoVirtual() == NULL && group_info_ != NULL) {
    delete group_info_;
  }
  group_info_ = NULL;
}

bool Group::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mars.stn.Group)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .mars.stn.GroupInfo group_info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_group_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string members = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_members()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->members(this->members_size() - 1).data(),
            this->members(this->members_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mars.stn.Group.members"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mars.stn.Group)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mars.stn.Group)
  return false;
#undef DO_
}

void Group::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mars.stn.Group)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mars.stn.GroupInfo group_info = 1;
  if (this->has_group_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->group_info_, output);
  }

  // repeated string members = 2;
  for (int i = 0, n = this->members_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->members(i).data(), this->members(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mars.stn.Group.members");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->members(i), output);
  }

  // @@protoc_insertion_point(serialize_end:mars.stn.Group)
}

::google::protobuf::uint8* Group::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mars.stn.Group)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mars.stn.GroupInfo group_info = 1;
  if (this->has_group_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->group_info_, deterministic, target);
  }

  // repeated string members = 2;
  for (int i = 0, n = this->members_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->members(i).data(), this->members(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mars.stn.Group.members");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->members(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:mars.stn.Group)
  return target;
}

size_t Group::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mars.stn.Group)
  size_t total_size = 0;

  // repeated string members = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->members_size());
  for (int i = 0, n = this->members_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->members(i));
  }

  // .mars.stn.GroupInfo group_info = 1;
  if (this->has_group_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->group_info_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Group::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mars.stn.Group)
  GOOGLE_DCHECK_NE(&from, this);
  const Group* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Group>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mars.stn.Group)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mars.stn.Group)
    MergeFrom(*source);
  }
}

void Group::MergeFrom(const Group& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mars.stn.Group)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  members_.MergeFrom(from.members_);
  if (from.has_group_info()) {
    mutable_group_info()->::mars::stn::GroupInfo::MergeFrom(from.group_info());
  }
}

void Group::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mars.stn.Group)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Group::CopyFrom(const Group& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mars.stn.Group)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Group::IsInitialized() const {
  return true;
}

void Group::Swap(Group* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Group::InternalSwap(Group* other) {
  members_.InternalSwap(&other->members_);
  std::swap(group_info_, other->group_info_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Group::GetMetadata() const {
  protobuf_group_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_group_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Group

// .mars.stn.GroupInfo group_info = 1;
bool Group::has_group_info() const {
  return this != internal_default_instance() && group_info_ != NULL;
}
void Group::clear_group_info() {
  if (GetArenaNoVirtual() == NULL && group_info_ != NULL) delete group_info_;
  group_info_ = NULL;
}
const ::mars::stn::GroupInfo& Group::group_info() const {
  // @@protoc_insertion_point(field_get:mars.stn.Group.group_info)
  return group_info_ != NULL ? *group_info_
                         : *::mars::stn::GroupInfo::internal_default_instance();
}
::mars::stn::GroupInfo* Group::mutable_group_info() {
  
  if (group_info_ == NULL) {
    group_info_ = new ::mars::stn::GroupInfo;
  }
  // @@protoc_insertion_point(field_mutable:mars.stn.Group.group_info)
  return group_info_;
}
::mars::stn::GroupInfo* Group::release_group_info() {
  // @@protoc_insertion_point(field_release:mars.stn.Group.group_info)
  
  ::mars::stn::GroupInfo* temp = group_info_;
  group_info_ = NULL;
  return temp;
}
void Group::set_allocated_group_info(::mars::stn::GroupInfo* group_info) {
  delete group_info_;
  group_info_ = group_info;
  if (group_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mars.stn.Group.group_info)
}

// repeated string members = 2;
int Group::members_size() const {
  return members_.size();
}
void Group::clear_members() {
  members_.Clear();
}
const ::std::string& Group::members(int index) const {
  // @@protoc_insertion_point(field_get:mars.stn.Group.members)
  return members_.Get(index);
}
::std::string* Group::mutable_members(int index) {
  // @@protoc_insertion_point(field_mutable:mars.stn.Group.members)
  return members_.Mutable(index);
}
void Group::set_members(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:mars.stn.Group.members)
  members_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void Group::set_members(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:mars.stn.Group.members)
  members_.Mutable(index)->assign(std::move(value));
}
#endif
void Group::set_members(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  members_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:mars.stn.Group.members)
}
void Group::set_members(int index, const char* value, size_t size) {
  members_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:mars.stn.Group.members)
}
::std::string* Group::add_members() {
  // @@protoc_insertion_point(field_add_mutable:mars.stn.Group.members)
  return members_.Add();
}
void Group::add_members(const ::std::string& value) {
  members_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:mars.stn.Group.members)
}
#if LANG_CXX11
void Group::add_members(::std::string&& value) {
  members_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:mars.stn.Group.members)
}
#endif
void Group::add_members(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  members_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:mars.stn.Group.members)
}
void Group::add_members(const char* value, size_t size) {
  members_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:mars.stn.Group.members)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
Group::members() const {
  // @@protoc_insertion_point(field_list:mars.stn.Group.members)
  return members_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
Group::mutable_members() {
  // @@protoc_insertion_point(field_mutable_list:mars.stn.Group.members)
  return &members_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace stn
}  // namespace mars

// @@protoc_insertion_point(global_scope)
