// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pull_user_request.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "pull_user_request.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace mars {
namespace stn {
class UserRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<UserRequest> {
} _UserRequest_default_instance_;
class PullUserRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PullUserRequest> {
} _PullUserRequest_default_instance_;

namespace protobuf_pull_5fuser_5frequest_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[2];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserRequest, uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserRequest, update_dt_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PullUserRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PullUserRequest, request_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(UserRequest)},
  { 7, -1, sizeof(PullUserRequest)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_UserRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PullUserRequest_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "pull_user_request.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

}  // namespace

void TableStruct::Shutdown() {
  _UserRequest_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _PullUserRequest_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _UserRequest_default_instance_.DefaultConstruct();
  _PullUserRequest_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\027pull_user_request.proto\022\010mars.stn\"-\n\013U"
      "serRequest\022\013\n\003uid\030\001 \001(\t\022\021\n\tupdate_dt\030\002 \001"
      "(\003\"9\n\017PullUserRequest\022&\n\007request\030\001 \003(\0132\025"
      ".mars.stn.UserRequestB1\n\024win.liyufan.im."
      "protoB\031PullUserRequestOuterClassb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 200);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "pull_user_request.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_pull_5fuser_5frequest_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserRequest::kUidFieldNumber;
const int UserRequest::kUpdateDtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserRequest::UserRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_pull_5fuser_5frequest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mars.stn.UserRequest)
}
UserRequest::UserRequest(const UserRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uid().size() > 0) {
    uid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uid_);
  }
  update_dt_ = from.update_dt_;
  // @@protoc_insertion_point(copy_constructor:mars.stn.UserRequest)
}

void UserRequest::SharedCtor() {
  uid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  update_dt_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

UserRequest::~UserRequest() {
  // @@protoc_insertion_point(destructor:mars.stn.UserRequest)
  SharedDtor();
}

void UserRequest::SharedDtor() {
  uid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UserRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserRequest::descriptor() {
  protobuf_pull_5fuser_5frequest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pull_5fuser_5frequest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserRequest& UserRequest::default_instance() {
  protobuf_pull_5fuser_5frequest_2eproto::InitDefaults();
  return *internal_default_instance();
}

UserRequest* UserRequest::New(::google::protobuf::Arena* arena) const {
  UserRequest* n = new UserRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mars.stn.UserRequest)
  uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  update_dt_ = GOOGLE_LONGLONG(0);
}

bool UserRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mars.stn.UserRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string uid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uid().data(), this->uid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mars.stn.UserRequest.uid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 update_dt = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &update_dt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mars.stn.UserRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mars.stn.UserRequest)
  return false;
#undef DO_
}

void UserRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mars.stn.UserRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string uid = 1;
  if (this->uid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uid().data(), this->uid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mars.stn.UserRequest.uid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->uid(), output);
  }

  // int64 update_dt = 2;
  if (this->update_dt() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->update_dt(), output);
  }

  // @@protoc_insertion_point(serialize_end:mars.stn.UserRequest)
}

::google::protobuf::uint8* UserRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mars.stn.UserRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string uid = 1;
  if (this->uid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uid().data(), this->uid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mars.stn.UserRequest.uid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->uid(), target);
  }

  // int64 update_dt = 2;
  if (this->update_dt() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->update_dt(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:mars.stn.UserRequest)
  return target;
}

size_t UserRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mars.stn.UserRequest)
  size_t total_size = 0;

  // string uid = 1;
  if (this->uid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uid());
  }

  // int64 update_dt = 2;
  if (this->update_dt() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->update_dt());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mars.stn.UserRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UserRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mars.stn.UserRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mars.stn.UserRequest)
    MergeFrom(*source);
  }
}

void UserRequest::MergeFrom(const UserRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mars.stn.UserRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uid().size() > 0) {

    uid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uid_);
  }
  if (from.update_dt() != 0) {
    set_update_dt(from.update_dt());
  }
}

void UserRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mars.stn.UserRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserRequest::CopyFrom(const UserRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mars.stn.UserRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserRequest::IsInitialized() const {
  return true;
}

void UserRequest::Swap(UserRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserRequest::InternalSwap(UserRequest* other) {
  uid_.Swap(&other->uid_);
  std::swap(update_dt_, other->update_dt_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UserRequest::GetMetadata() const {
  protobuf_pull_5fuser_5frequest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pull_5fuser_5frequest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UserRequest

// string uid = 1;
void UserRequest::clear_uid() {
  uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UserRequest::uid() const {
  // @@protoc_insertion_point(field_get:mars.stn.UserRequest.uid)
  return uid_.GetNoArena();
}
void UserRequest::set_uid(const ::std::string& value) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mars.stn.UserRequest.uid)
}
#if LANG_CXX11
void UserRequest::set_uid(::std::string&& value) {
  
  uid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mars.stn.UserRequest.uid)
}
#endif
void UserRequest::set_uid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mars.stn.UserRequest.uid)
}
void UserRequest::set_uid(const char* value, size_t size) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mars.stn.UserRequest.uid)
}
::std::string* UserRequest::mutable_uid() {
  
  // @@protoc_insertion_point(field_mutable:mars.stn.UserRequest.uid)
  return uid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UserRequest::release_uid() {
  // @@protoc_insertion_point(field_release:mars.stn.UserRequest.uid)
  
  return uid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UserRequest::set_allocated_uid(::std::string* uid) {
  if (uid != NULL) {
    
  } else {
    
  }
  uid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uid);
  // @@protoc_insertion_point(field_set_allocated:mars.stn.UserRequest.uid)
}

// int64 update_dt = 2;
void UserRequest::clear_update_dt() {
  update_dt_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 UserRequest::update_dt() const {
  // @@protoc_insertion_point(field_get:mars.stn.UserRequest.update_dt)
  return update_dt_;
}
void UserRequest::set_update_dt(::google::protobuf::int64 value) {
  
  update_dt_ = value;
  // @@protoc_insertion_point(field_set:mars.stn.UserRequest.update_dt)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PullUserRequest::kRequestFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PullUserRequest::PullUserRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_pull_5fuser_5frequest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mars.stn.PullUserRequest)
}
PullUserRequest::PullUserRequest(const PullUserRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      request_(from.request_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mars.stn.PullUserRequest)
}

void PullUserRequest::SharedCtor() {
  _cached_size_ = 0;
}

PullUserRequest::~PullUserRequest() {
  // @@protoc_insertion_point(destructor:mars.stn.PullUserRequest)
  SharedDtor();
}

void PullUserRequest::SharedDtor() {
}

void PullUserRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PullUserRequest::descriptor() {
  protobuf_pull_5fuser_5frequest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pull_5fuser_5frequest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PullUserRequest& PullUserRequest::default_instance() {
  protobuf_pull_5fuser_5frequest_2eproto::InitDefaults();
  return *internal_default_instance();
}

PullUserRequest* PullUserRequest::New(::google::protobuf::Arena* arena) const {
  PullUserRequest* n = new PullUserRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PullUserRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mars.stn.PullUserRequest)
  request_.Clear();
}

bool PullUserRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mars.stn.PullUserRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .mars.stn.UserRequest request = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_request()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mars.stn.PullUserRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mars.stn.PullUserRequest)
  return false;
#undef DO_
}

void PullUserRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mars.stn.PullUserRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .mars.stn.UserRequest request = 1;
  for (unsigned int i = 0, n = this->request_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->request(i), output);
  }

  // @@protoc_insertion_point(serialize_end:mars.stn.PullUserRequest)
}

::google::protobuf::uint8* PullUserRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mars.stn.PullUserRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .mars.stn.UserRequest request = 1;
  for (unsigned int i = 0, n = this->request_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->request(i), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:mars.stn.PullUserRequest)
  return target;
}

size_t PullUserRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mars.stn.PullUserRequest)
  size_t total_size = 0;

  // repeated .mars.stn.UserRequest request = 1;
  {
    unsigned int count = this->request_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->request(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PullUserRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mars.stn.PullUserRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PullUserRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PullUserRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mars.stn.PullUserRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mars.stn.PullUserRequest)
    MergeFrom(*source);
  }
}

void PullUserRequest::MergeFrom(const PullUserRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mars.stn.PullUserRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  request_.MergeFrom(from.request_);
}

void PullUserRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mars.stn.PullUserRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PullUserRequest::CopyFrom(const PullUserRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mars.stn.PullUserRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PullUserRequest::IsInitialized() const {
  return true;
}

void PullUserRequest::Swap(PullUserRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PullUserRequest::InternalSwap(PullUserRequest* other) {
  request_.InternalSwap(&other->request_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PullUserRequest::GetMetadata() const {
  protobuf_pull_5fuser_5frequest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pull_5fuser_5frequest_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PullUserRequest

// repeated .mars.stn.UserRequest request = 1;
int PullUserRequest::request_size() const {
  return request_.size();
}
void PullUserRequest::clear_request() {
  request_.Clear();
}
const ::mars::stn::UserRequest& PullUserRequest::request(int index) const {
  // @@protoc_insertion_point(field_get:mars.stn.PullUserRequest.request)
  return request_.Get(index);
}
::mars::stn::UserRequest* PullUserRequest::mutable_request(int index) {
  // @@protoc_insertion_point(field_mutable:mars.stn.PullUserRequest.request)
  return request_.Mutable(index);
}
::mars::stn::UserRequest* PullUserRequest::add_request() {
  // @@protoc_insertion_point(field_add:mars.stn.PullUserRequest.request)
  return request_.Add();
}
::google::protobuf::RepeatedPtrField< ::mars::stn::UserRequest >*
PullUserRequest::mutable_request() {
  // @@protoc_insertion_point(field_mutable_list:mars.stn.PullUserRequest.request)
  return &request_;
}
const ::google::protobuf::RepeatedPtrField< ::mars::stn::UserRequest >&
PullUserRequest::request() const {
  // @@protoc_insertion_point(field_list:mars.stn.PullUserRequest.request)
  return request_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace stn
}  // namespace mars

// @@protoc_insertion_point(global_scope)
