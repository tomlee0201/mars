// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: get_upload_token_result.proto

#ifndef PROTOBUF_get_5fupload_5ftoken_5fresult_2eproto__INCLUDED
#define PROTOBUF_get_5fupload_5ftoken_5fresult_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace mars {
namespace stn {
class GetUploadTokenResult;
class GetUploadTokenResultDefaultTypeInternal;
extern GetUploadTokenResultDefaultTypeInternal _GetUploadTokenResult_default_instance_;
}  // namespace stn
}  // namespace mars

namespace mars {
namespace stn {

namespace protobuf_get_5fupload_5ftoken_5fresult_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_get_5fupload_5ftoken_5fresult_2eproto

// ===================================================================

class GetUploadTokenResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mars.stn.GetUploadTokenResult) */ {
 public:
  GetUploadTokenResult();
  virtual ~GetUploadTokenResult();

  GetUploadTokenResult(const GetUploadTokenResult& from);

  inline GetUploadTokenResult& operator=(const GetUploadTokenResult& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetUploadTokenResult& default_instance();

  static inline const GetUploadTokenResult* internal_default_instance() {
    return reinterpret_cast<const GetUploadTokenResult*>(
               &_GetUploadTokenResult_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(GetUploadTokenResult* other);

  // implements Message ----------------------------------------------

  inline GetUploadTokenResult* New() const PROTOBUF_FINAL { return New(NULL); }

  GetUploadTokenResult* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetUploadTokenResult& from);
  void MergeFrom(const GetUploadTokenResult& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetUploadTokenResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string domain = 1;
  void clear_domain();
  static const int kDomainFieldNumber = 1;
  const ::std::string& domain() const;
  void set_domain(const ::std::string& value);
  #if LANG_CXX11
  void set_domain(::std::string&& value);
  #endif
  void set_domain(const char* value);
  void set_domain(const char* value, size_t size);
  ::std::string* mutable_domain();
  ::std::string* release_domain();
  void set_allocated_domain(::std::string* domain);

  // string token = 2;
  void clear_token();
  static const int kTokenFieldNumber = 2;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // string server = 3;
  void clear_server();
  static const int kServerFieldNumber = 3;
  const ::std::string& server() const;
  void set_server(const ::std::string& value);
  #if LANG_CXX11
  void set_server(::std::string&& value);
  #endif
  void set_server(const char* value);
  void set_server(const char* value, size_t size);
  ::std::string* mutable_server();
  ::std::string* release_server();
  void set_allocated_server(::std::string* server);

  // @@protoc_insertion_point(class_scope:mars.stn.GetUploadTokenResult)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr domain_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::internal::ArenaStringPtr server_;
  mutable int _cached_size_;
  friend struct protobuf_get_5fupload_5ftoken_5fresult_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// GetUploadTokenResult

// string domain = 1;
inline void GetUploadTokenResult::clear_domain() {
  domain_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetUploadTokenResult::domain() const {
  // @@protoc_insertion_point(field_get:mars.stn.GetUploadTokenResult.domain)
  return domain_.GetNoArena();
}
inline void GetUploadTokenResult::set_domain(const ::std::string& value) {
  
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mars.stn.GetUploadTokenResult.domain)
}
#if LANG_CXX11
inline void GetUploadTokenResult::set_domain(::std::string&& value) {
  
  domain_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mars.stn.GetUploadTokenResult.domain)
}
#endif
inline void GetUploadTokenResult::set_domain(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mars.stn.GetUploadTokenResult.domain)
}
inline void GetUploadTokenResult::set_domain(const char* value, size_t size) {
  
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mars.stn.GetUploadTokenResult.domain)
}
inline ::std::string* GetUploadTokenResult::mutable_domain() {
  
  // @@protoc_insertion_point(field_mutable:mars.stn.GetUploadTokenResult.domain)
  return domain_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetUploadTokenResult::release_domain() {
  // @@protoc_insertion_point(field_release:mars.stn.GetUploadTokenResult.domain)
  
  return domain_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetUploadTokenResult::set_allocated_domain(::std::string* domain) {
  if (domain != NULL) {
    
  } else {
    
  }
  domain_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), domain);
  // @@protoc_insertion_point(field_set_allocated:mars.stn.GetUploadTokenResult.domain)
}

// string token = 2;
inline void GetUploadTokenResult::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetUploadTokenResult::token() const {
  // @@protoc_insertion_point(field_get:mars.stn.GetUploadTokenResult.token)
  return token_.GetNoArena();
}
inline void GetUploadTokenResult::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mars.stn.GetUploadTokenResult.token)
}
#if LANG_CXX11
inline void GetUploadTokenResult::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mars.stn.GetUploadTokenResult.token)
}
#endif
inline void GetUploadTokenResult::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mars.stn.GetUploadTokenResult.token)
}
inline void GetUploadTokenResult::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mars.stn.GetUploadTokenResult.token)
}
inline ::std::string* GetUploadTokenResult::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:mars.stn.GetUploadTokenResult.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetUploadTokenResult::release_token() {
  // @@protoc_insertion_point(field_release:mars.stn.GetUploadTokenResult.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetUploadTokenResult::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:mars.stn.GetUploadTokenResult.token)
}

// string server = 3;
inline void GetUploadTokenResult::clear_server() {
  server_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetUploadTokenResult::server() const {
  // @@protoc_insertion_point(field_get:mars.stn.GetUploadTokenResult.server)
  return server_.GetNoArena();
}
inline void GetUploadTokenResult::set_server(const ::std::string& value) {
  
  server_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mars.stn.GetUploadTokenResult.server)
}
#if LANG_CXX11
inline void GetUploadTokenResult::set_server(::std::string&& value) {
  
  server_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mars.stn.GetUploadTokenResult.server)
}
#endif
inline void GetUploadTokenResult::set_server(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  server_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mars.stn.GetUploadTokenResult.server)
}
inline void GetUploadTokenResult::set_server(const char* value, size_t size) {
  
  server_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mars.stn.GetUploadTokenResult.server)
}
inline ::std::string* GetUploadTokenResult::mutable_server() {
  
  // @@protoc_insertion_point(field_mutable:mars.stn.GetUploadTokenResult.server)
  return server_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetUploadTokenResult::release_server() {
  // @@protoc_insertion_point(field_release:mars.stn.GetUploadTokenResult.server)
  
  return server_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetUploadTokenResult::set_allocated_server(::std::string* server) {
  if (server != NULL) {
    
  } else {
    
  }
  server_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), server);
  // @@protoc_insertion_point(field_set_allocated:mars.stn.GetUploadTokenResult.server)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


}  // namespace stn
}  // namespace mars

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_get_5fupload_5ftoken_5fresult_2eproto__INCLUDED
