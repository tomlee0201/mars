// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: create_group_request.proto

#ifndef PROTOBUF_create_5fgroup_5frequest_2eproto__INCLUDED
#define PROTOBUF_create_5fgroup_5frequest_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "group.pb.h"
#include "message_content.pb.h"
// @@protoc_insertion_point(includes)
namespace mars {
namespace stn {
class CreateGroupRequest;
class CreateGroupRequestDefaultTypeInternal;
extern CreateGroupRequestDefaultTypeInternal _CreateGroupRequest_default_instance_;
class Group;
class GroupDefaultTypeInternal;
extern GroupDefaultTypeInternal _Group_default_instance_;
class GroupInfo;
class GroupInfoDefaultTypeInternal;
extern GroupInfoDefaultTypeInternal _GroupInfo_default_instance_;
class MessageContent;
class MessageContentDefaultTypeInternal;
extern MessageContentDefaultTypeInternal _MessageContent_default_instance_;
}  // namespace stn
}  // namespace mars

namespace mars {
namespace stn {

namespace protobuf_create_5fgroup_5frequest_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_create_5fgroup_5frequest_2eproto

// ===================================================================

class CreateGroupRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mars.stn.CreateGroupRequest) */ {
 public:
  CreateGroupRequest();
  virtual ~CreateGroupRequest();

  CreateGroupRequest(const CreateGroupRequest& from);

  inline CreateGroupRequest& operator=(const CreateGroupRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateGroupRequest& default_instance();

  static inline const CreateGroupRequest* internal_default_instance() {
    return reinterpret_cast<const CreateGroupRequest*>(
               &_CreateGroupRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(CreateGroupRequest* other);

  // implements Message ----------------------------------------------

  inline CreateGroupRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CreateGroupRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CreateGroupRequest& from);
  void MergeFrom(const CreateGroupRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CreateGroupRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mars.stn.Group group = 1;
  bool has_group() const;
  void clear_group();
  static const int kGroupFieldNumber = 1;
  const ::mars::stn::Group& group() const;
  ::mars::stn::Group* mutable_group();
  ::mars::stn::Group* release_group();
  void set_allocated_group(::mars::stn::Group* group);

  // .mars.stn.MessageContent notify_content = 2;
  bool has_notify_content() const;
  void clear_notify_content();
  static const int kNotifyContentFieldNumber = 2;
  const ::mars::stn::MessageContent& notify_content() const;
  ::mars::stn::MessageContent* mutable_notify_content();
  ::mars::stn::MessageContent* release_notify_content();
  void set_allocated_notify_content(::mars::stn::MessageContent* notify_content);

  // @@protoc_insertion_point(class_scope:mars.stn.CreateGroupRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mars::stn::Group* group_;
  ::mars::stn::MessageContent* notify_content_;
  mutable int _cached_size_;
  friend struct protobuf_create_5fgroup_5frequest_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// CreateGroupRequest

// .mars.stn.Group group = 1;
inline bool CreateGroupRequest::has_group() const {
  return this != internal_default_instance() && group_ != NULL;
}
inline void CreateGroupRequest::clear_group() {
  if (GetArenaNoVirtual() == NULL && group_ != NULL) delete group_;
  group_ = NULL;
}
inline const ::mars::stn::Group& CreateGroupRequest::group() const {
  // @@protoc_insertion_point(field_get:mars.stn.CreateGroupRequest.group)
  return group_ != NULL ? *group_
                         : *::mars::stn::Group::internal_default_instance();
}
inline ::mars::stn::Group* CreateGroupRequest::mutable_group() {
  
  if (group_ == NULL) {
    group_ = new ::mars::stn::Group;
  }
  // @@protoc_insertion_point(field_mutable:mars.stn.CreateGroupRequest.group)
  return group_;
}
inline ::mars::stn::Group* CreateGroupRequest::release_group() {
  // @@protoc_insertion_point(field_release:mars.stn.CreateGroupRequest.group)
  
  ::mars::stn::Group* temp = group_;
  group_ = NULL;
  return temp;
}
inline void CreateGroupRequest::set_allocated_group(::mars::stn::Group* group) {
  delete group_;
  group_ = group;
  if (group) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mars.stn.CreateGroupRequest.group)
}

// .mars.stn.MessageContent notify_content = 2;
inline bool CreateGroupRequest::has_notify_content() const {
  return this != internal_default_instance() && notify_content_ != NULL;
}
inline void CreateGroupRequest::clear_notify_content() {
  if (GetArenaNoVirtual() == NULL && notify_content_ != NULL) delete notify_content_;
  notify_content_ = NULL;
}
inline const ::mars::stn::MessageContent& CreateGroupRequest::notify_content() const {
  // @@protoc_insertion_point(field_get:mars.stn.CreateGroupRequest.notify_content)
  return notify_content_ != NULL ? *notify_content_
                         : *::mars::stn::MessageContent::internal_default_instance();
}
inline ::mars::stn::MessageContent* CreateGroupRequest::mutable_notify_content() {
  
  if (notify_content_ == NULL) {
    notify_content_ = new ::mars::stn::MessageContent;
  }
  // @@protoc_insertion_point(field_mutable:mars.stn.CreateGroupRequest.notify_content)
  return notify_content_;
}
inline ::mars::stn::MessageContent* CreateGroupRequest::release_notify_content() {
  // @@protoc_insertion_point(field_release:mars.stn.CreateGroupRequest.notify_content)
  
  ::mars::stn::MessageContent* temp = notify_content_;
  notify_content_ = NULL;
  return temp;
}
inline void CreateGroupRequest::set_allocated_notify_content(::mars::stn::MessageContent* notify_content) {
  delete notify_content_;
  notify_content_ = notify_content;
  if (notify_content) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mars.stn.CreateGroupRequest.notify_content)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


}  // namespace stn
}  // namespace mars

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_create_5fgroup_5frequest_2eproto__INCLUDED
