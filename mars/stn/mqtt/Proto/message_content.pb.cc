// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message_content.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "message_content.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace mars {
namespace stn {
class MessageContentDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MessageContent> {
} _MessageContent_default_instance_;

namespace protobuf_message_5fcontent_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[1];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageContent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageContent, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageContent, searchable_content_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageContent, push_content_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageContent, data_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(MessageContent)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_MessageContent_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "message_content.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

}  // namespace

void TableStruct::Shutdown() {
  _MessageContent_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _MessageContent_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\025message_content.proto\022\010mars.stn\"u\n\016Mes"
      "sageContent\022#\n\004type\030\001 \001(\0162\025.mars.stn.Con"
      "tentType\022\032\n\022searchable_content\030\002 \001(\t\022\024\n\014"
      "push_content\030\003 \001(\t\022\014\n\004data\030\004 \001(\014*a\n\013Cont"
      "entType\022\010\n\004Text\020\000\022\t\n\005Image\020\001\022\t\n\005Voice\020\002\022"
      "\014\n\010Location\020\003\022\t\n\005Video\020\004\022\r\n\tRichMedia\020\005\022"
      "\n\n\006Custom\020\006B0\n\024win.liyufan.im.protoB\030Mes"
      "sageContentOuterClassb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 309);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "message_content.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_message_5fcontent_2eproto

const ::google::protobuf::EnumDescriptor* ContentType_descriptor() {
  protobuf_message_5fcontent_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_message_5fcontent_2eproto::file_level_enum_descriptors[0];
}
bool ContentType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessageContent::kTypeFieldNumber;
const int MessageContent::kSearchableContentFieldNumber;
const int MessageContent::kPushContentFieldNumber;
const int MessageContent::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageContent::MessageContent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_message_5fcontent_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mars.stn.MessageContent)
}
MessageContent::MessageContent(const MessageContent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  searchable_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.searchable_content().size() > 0) {
    searchable_content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.searchable_content_);
  }
  push_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.push_content().size() > 0) {
    push_content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.push_content_);
  }
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:mars.stn.MessageContent)
}

void MessageContent::SharedCtor() {
  searchable_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  push_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  _cached_size_ = 0;
}

MessageContent::~MessageContent() {
  // @@protoc_insertion_point(destructor:mars.stn.MessageContent)
  SharedDtor();
}

void MessageContent::SharedDtor() {
  searchable_content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  push_content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MessageContent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageContent::descriptor() {
  protobuf_message_5fcontent_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_message_5fcontent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MessageContent& MessageContent::default_instance() {
  protobuf_message_5fcontent_2eproto::InitDefaults();
  return *internal_default_instance();
}

MessageContent* MessageContent::New(::google::protobuf::Arena* arena) const {
  MessageContent* n = new MessageContent;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MessageContent::Clear() {
// @@protoc_insertion_point(message_clear_start:mars.stn.MessageContent)
  searchable_content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  push_content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
}

bool MessageContent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mars.stn.MessageContent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .mars.stn.ContentType type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::mars::stn::ContentType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string searchable_content = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_searchable_content()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->searchable_content().data(), this->searchable_content().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mars.stn.MessageContent.searchable_content"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string push_content = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_push_content()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->push_content().data(), this->push_content().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mars.stn.MessageContent.push_content"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes data = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mars.stn.MessageContent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mars.stn.MessageContent)
  return false;
#undef DO_
}

void MessageContent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mars.stn.MessageContent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mars.stn.ContentType type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // string searchable_content = 2;
  if (this->searchable_content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->searchable_content().data(), this->searchable_content().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mars.stn.MessageContent.searchable_content");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->searchable_content(), output);
  }

  // string push_content = 3;
  if (this->push_content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->push_content().data(), this->push_content().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mars.stn.MessageContent.push_content");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->push_content(), output);
  }

  // bytes data = 4;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->data(), output);
  }

  // @@protoc_insertion_point(serialize_end:mars.stn.MessageContent)
}

::google::protobuf::uint8* MessageContent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mars.stn.MessageContent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mars.stn.ContentType type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // string searchable_content = 2;
  if (this->searchable_content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->searchable_content().data(), this->searchable_content().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mars.stn.MessageContent.searchable_content");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->searchable_content(), target);
  }

  // string push_content = 3;
  if (this->push_content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->push_content().data(), this->push_content().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mars.stn.MessageContent.push_content");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->push_content(), target);
  }

  // bytes data = 4;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->data(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:mars.stn.MessageContent)
  return target;
}

size_t MessageContent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mars.stn.MessageContent)
  size_t total_size = 0;

  // string searchable_content = 2;
  if (this->searchable_content().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->searchable_content());
  }

  // string push_content = 3;
  if (this->push_content().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->push_content());
  }

  // bytes data = 4;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  // .mars.stn.ContentType type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MessageContent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mars.stn.MessageContent)
  GOOGLE_DCHECK_NE(&from, this);
  const MessageContent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MessageContent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mars.stn.MessageContent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mars.stn.MessageContent)
    MergeFrom(*source);
  }
}

void MessageContent::MergeFrom(const MessageContent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mars.stn.MessageContent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.searchable_content().size() > 0) {

    searchable_content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.searchable_content_);
  }
  if (from.push_content().size() > 0) {

    push_content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.push_content_);
  }
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void MessageContent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mars.stn.MessageContent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageContent::CopyFrom(const MessageContent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mars.stn.MessageContent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageContent::IsInitialized() const {
  return true;
}

void MessageContent::Swap(MessageContent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageContent::InternalSwap(MessageContent* other) {
  searchable_content_.Swap(&other->searchable_content_);
  push_content_.Swap(&other->push_content_);
  data_.Swap(&other->data_);
  std::swap(type_, other->type_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MessageContent::GetMetadata() const {
  protobuf_message_5fcontent_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_message_5fcontent_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MessageContent

// .mars.stn.ContentType type = 1;
void MessageContent::clear_type() {
  type_ = 0;
}
::mars::stn::ContentType MessageContent::type() const {
  // @@protoc_insertion_point(field_get:mars.stn.MessageContent.type)
  return static_cast< ::mars::stn::ContentType >(type_);
}
void MessageContent::set_type(::mars::stn::ContentType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:mars.stn.MessageContent.type)
}

// string searchable_content = 2;
void MessageContent::clear_searchable_content() {
  searchable_content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MessageContent::searchable_content() const {
  // @@protoc_insertion_point(field_get:mars.stn.MessageContent.searchable_content)
  return searchable_content_.GetNoArena();
}
void MessageContent::set_searchable_content(const ::std::string& value) {
  
  searchable_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mars.stn.MessageContent.searchable_content)
}
#if LANG_CXX11
void MessageContent::set_searchable_content(::std::string&& value) {
  
  searchable_content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mars.stn.MessageContent.searchable_content)
}
#endif
void MessageContent::set_searchable_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  searchable_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mars.stn.MessageContent.searchable_content)
}
void MessageContent::set_searchable_content(const char* value, size_t size) {
  
  searchable_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mars.stn.MessageContent.searchable_content)
}
::std::string* MessageContent::mutable_searchable_content() {
  
  // @@protoc_insertion_point(field_mutable:mars.stn.MessageContent.searchable_content)
  return searchable_content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MessageContent::release_searchable_content() {
  // @@protoc_insertion_point(field_release:mars.stn.MessageContent.searchable_content)
  
  return searchable_content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MessageContent::set_allocated_searchable_content(::std::string* searchable_content) {
  if (searchable_content != NULL) {
    
  } else {
    
  }
  searchable_content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), searchable_content);
  // @@protoc_insertion_point(field_set_allocated:mars.stn.MessageContent.searchable_content)
}

// string push_content = 3;
void MessageContent::clear_push_content() {
  push_content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MessageContent::push_content() const {
  // @@protoc_insertion_point(field_get:mars.stn.MessageContent.push_content)
  return push_content_.GetNoArena();
}
void MessageContent::set_push_content(const ::std::string& value) {
  
  push_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mars.stn.MessageContent.push_content)
}
#if LANG_CXX11
void MessageContent::set_push_content(::std::string&& value) {
  
  push_content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mars.stn.MessageContent.push_content)
}
#endif
void MessageContent::set_push_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  push_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mars.stn.MessageContent.push_content)
}
void MessageContent::set_push_content(const char* value, size_t size) {
  
  push_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mars.stn.MessageContent.push_content)
}
::std::string* MessageContent::mutable_push_content() {
  
  // @@protoc_insertion_point(field_mutable:mars.stn.MessageContent.push_content)
  return push_content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MessageContent::release_push_content() {
  // @@protoc_insertion_point(field_release:mars.stn.MessageContent.push_content)
  
  return push_content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MessageContent::set_allocated_push_content(::std::string* push_content) {
  if (push_content != NULL) {
    
  } else {
    
  }
  push_content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), push_content);
  // @@protoc_insertion_point(field_set_allocated:mars.stn.MessageContent.push_content)
}

// bytes data = 4;
void MessageContent::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MessageContent::data() const {
  // @@protoc_insertion_point(field_get:mars.stn.MessageContent.data)
  return data_.GetNoArena();
}
void MessageContent::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mars.stn.MessageContent.data)
}
#if LANG_CXX11
void MessageContent::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mars.stn.MessageContent.data)
}
#endif
void MessageContent::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mars.stn.MessageContent.data)
}
void MessageContent::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mars.stn.MessageContent.data)
}
::std::string* MessageContent::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:mars.stn.MessageContent.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MessageContent::release_data() {
  // @@protoc_insertion_point(field_release:mars.stn.MessageContent.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MessageContent::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:mars.stn.MessageContent.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace stn
}  // namespace mars

// @@protoc_insertion_point(global_scope)
